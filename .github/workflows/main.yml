name: Android Release

on: pull_request

jobs:
  clientapi_unit_tests:
    name: Run ClientApi Unit Tests
    runs-on: ubuntu-18.04
    steps:
      - run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE_GITHUB }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - uses: actions/checkout@v1
        with: 
          submodules: true
      
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up project
        run: |
          echo "SIMPRINTS_ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "SIMPRINTS_ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" >> gradle.properties
          PATH=$ANDROID_HOME/tools/bin:$PATH

          echo "org.gradle.caching=true" >> gradle.properties
          cat ci/ci_settings >> settings.gradle
          echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> local.properties
          
      - name: Run Unit tests
        run: bash ./gradlew clientapi:testDebugUnitTest --stacktrace

      - name: Prepare results
        if: always()
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./clientapi_tests_results.zip clientapi/build/reports/tests/testDebugUnitTest

      - name: Upload ClientApi unit tests results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: clientapi_tests_results
          path: clientapi_tests_results.zip

  id_unit_tests:
    name: Run Id Unit Tests
    runs-on: ubuntu-18.04
    steps:
      - run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE_GITHUB }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - uses: actions/checkout@v1
        with: 
          submodules: true
      
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up project
        run: |
          echo "SIMPRINTS_ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "SIMPRINTS_ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" >> gradle.properties
          PATH=$ANDROID_HOME/tools/bin:$PATH
          
          echo "org.gradle.caching=true" >> gradle.properties
          cat ci/ci_settings >> settings.gradle
          echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> local.properties
          
      - name: Run Unit tests
        run: bash ./gradlew id:testDebugUnitTest --stacktrace

      - name: Prepare results
        if: always()
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./id_tests_results.zip id/build/reports/tests/testDebugUnitTest

      - name: Upload Id unit tests results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: id_tests_results
          path: id_tests_results.zip

  face_unit_tests:
    name: Run Face Unit Tests
    runs-on: ubuntu-18.04
    steps:
      - run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE_GITHUB }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - uses: actions/checkout@v1
        with: 
          submodules: true
      
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up project
        run: |
          echo "SIMPRINTS_ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "SIMPRINTS_ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" >> gradle.properties
          echo $ANDROID_HOME
          PATH=$ANDROID_HOME/tools/bin:$PATH

          echo "org.gradle.caching=true" >> gradle.properties
          cat ci/ci_settings >> settings.gradle
          echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> local.properties
          
      - name: Run Unit tests
        run: bash ./gradlew face:testDebugUnitTest --stacktrace

      - name: Prepare results
        if: always()
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./face_tests_results.zip face/build/reports/tests/testDebugUnitTest

      - name: Upload Face unit tests results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: face_tests_results
          path: face_tests_results.zip

  fingerprint_unit_tests:
    name: Run Fingerprint Unit Tests
    runs-on: ubuntu-18.04
    steps:
      - run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE_GITHUB }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - uses: actions/checkout@v1
        with: 
          submodules: true
      
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up project
        run: |
          echo "SIMPRINTS_ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "SIMPRINTS_ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" >> gradle.properties
          PATH=$ANDROID_HOME/tools/bin:$PATH
          
          echo "org.gradle.caching=true" >> gradle.properties
          cat ci/ci_settings >> settings.gradle
          echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> local.properties
          
      - name: Run Unit tests
        run: bash ./gradlew fingerprint:testDebugUnitTest --stacktrace

      - name: Prepare results
        if: always()
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./fingerprint_tests_results.zip fingerprint/build/reports/tests/testDebugUnitTest

      - name: Upload Fingerprint unit tests results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: fingerprint_tests_results
          path: fingerprint_tests_results.zip
    

  universal_apk:
    name: Build debug universal apk
    runs-on: ubuntu-18.04
    steps:
      - name: Convert key base64 to file
        id: write_release_key
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: 'release.jks'
          encodedString: ${{ secrets.RELEASE_SIGN_KEY_BASE64 }}

      - name: Prepare github ssh key 
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE_GITHUB }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install NDK
        run: |
          echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}

      - name: Set up project
        run: |
          echo "SIMPRINTS_ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "SIMPRINTS_ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" >> gradle.properties
          PATH=$ANDROID_HOME/tools/bin:$PATH

          echo "org.gradle.caching=true" >> gradle.properties
          cat ci/ci_settings >> settings.gradle
          echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> local.properties
          
      - name: Build debug bundle
        run: |
          cat ci/debug_gradle_signing >> id/build.gradle && ./gradlew bundleDebug --stacktrace
        
      - name: Convert bundle to universal apk and sign
        run: |
          wget "https://github.com/google/bundletool/releases/download/0.13.4/bundletool-all.jar"
          java -jar bundletool-all.jar build-apks --bundle id/build/outputs/bundle/debug/id-debug.aab --output universal.apks --overwrite --mode=UNIVERSAL --ks=ci/debug_keystore --ks-key-alias=androiddebugkey --key-pass=pass:android --ks-pass=pass:android

          mv universal.apks universal.zip
          unzip universal.zip

      - name: Upload apk
        uses: actions/upload-artifact@v1
        with:
          name: universal_debug_apk 
          path: ./universal.apk

  id_android_tests:
    name: Run ID Android Tests
    needs: universal_apk
    runs-on: ubuntu-18.04
    steps:
      - name: Convert key base64 to file
        id: write_release_key
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: 'release.jks'
          encodedString: ${{ secrets.RELEASE_SIGN_KEY_BASE64 }}

      - run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE_GITHUB }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install NDK
        run: |
          echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}

      - name: Set up project
        run: |
          echo "SIMPRINTS_ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "SIMPRINTS_ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" >> gradle.properties
          PATH=$ANDROID_HOME/tools/bin:$PATH

          echo "org.gradle.caching=true" >> gradle.properties
          cat ci/ci_settings >> settings.gradle
          echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> local.properties

      - name: Assemble Android Instrumentation Tests
        run: |
          cat ci/debug_gradle_signing >> id/build.gradle && ./gradlew id:assembleDebugAndroidTest

      - name: Download universal apk
        uses: actions/download-artifact@v1
        with:
          name: universal_debug_apk

      - name: Login to Google Cloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Set current project
        run: gcloud config set project simprints-android-ci

      - name: Run Instrumentation Tests in Firebase Test Lab
        run: |
          gcloud firebase test android run --type instrumentation --app universal_debug_apk/universal.apk --test id/build/outputs/apk/androidTest/debug/id-debug-androidTest.apk --device model=walleye,version=28,locale=en,orientation=portrait --timeout 20m --use-orchestrator

  face_android_tests:
    name: Run Face Android Tests
    needs: universal_apk
    runs-on: ubuntu-18.04
    steps:
      - name: Convert key base64 to file
        id: write_release_key
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: 'release.jks'
          encodedString: ${{ secrets.RELEASE_SIGN_KEY_BASE64 }}

      - run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE_GITHUB }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install NDK
        run: |
          echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}

      - name: Set up project
        run: |
          echo "SIMPRINTS_ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "SIMPRINTS_ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" >> gradle.properties
          PATH=$ANDROID_HOME/tools/bin:$PATH

          echo "org.gradle.caching=true" >> gradle.properties
          cat ci/ci_settings >> settings.gradle
          echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> local.properties
          
      - name: Assemble Android Instrumentation Tests
        run: |
          cat ci/debug_gradle_signing >> id/build.gradle &&
          cat ci/debug_gradle_signing >> face/build.gradle && ./gradlew face:assembleDebugAndroidTest

      - name: Download universal apk
        uses: actions/download-artifact@v1
        with:
          name: universal_debug_apk

      - name: Login to Google Cloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Set current project
        run: gcloud config set project simprints-android-ci

      - name: Run Instrumentation Tests in Firebase Test Lab
        run: |
          gcloud firebase test android run --type instrumentation --app universal_debug_apk/universal.apk --test face/build/outputs/apk/androidTest/debug/face-debug-androidTest.apk --device model=walleye,version=28,locale=en,orientation=portrait --timeout 20m --use-orchestrator

  fingerprint_android_tests:
    name: Run Fingerprint Android Tests
    needs: universal_apk
    runs-on: ubuntu-18.04
    steps:
      - name: Convert key base64 to file
        id: write_release_key
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: 'release.jks'
          encodedString: ${{ secrets.RELEASE_SIGN_KEY_BASE64 }}

      - run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE_GITHUB }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install NDK
        run: |
          echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}

      - name: Set up project
        run: |
          echo "SIMPRINTS_ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "SIMPRINTS_ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" >> gradle.properties
          PATH=$ANDROID_HOME/tools/bin:$PATH

          echo "org.gradle.caching=true" >> gradle.properties
          cat ci/ci_settings >> settings.gradle
          echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> local.properties
          
      - name: Assemble Android Instrumentation Tests
        run: |
          cat ci/debug_gradle_signing >> id/build.gradle &&
          cat ci/debug_gradle_signing >> fingerprint/build.gradle && ./gradlew fingerprint:assembleDebugAndroidTest

      - name: Download universal apk
        uses: actions/download-artifact@v1
        with:
          name: universal_debug_apk

      - name: Login to Google Cloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Set current project
        run: gcloud config set project simprints-android-ci

      - name: Run Instrumentation Tests in Firebase Test Lab
        run: |
          gcloud firebase test android run --type instrumentation --app universal_debug_apk/universal.apk --test fingerprint/build/outputs/apk/androidTest/debug/fingerprint-debug-androidTest.apk --device model=walleye,version=28,locale=en,orientation=portrait --timeout 20m --use-orchestrator

  clientapi_android_tests:
    name: Run ClientApi Android Tests
    needs: universal_apk
    runs-on: ubuntu-18.04
    steps:
      - run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE_GITHUB }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install NDK
        run: |
          echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}

      - name: Set up project
        run: |
          echo "SIMPRINTS_ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "SIMPRINTS_ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" >> gradle.properties
          PATH=$ANDROID_HOME/tools/bin:$PATH

          echo "org.gradle.caching=true" >> gradle.properties
          cat ci/ci_settings >> settings.gradle
          echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> local.properties
          
      - name: Assemble Android Instrumentation Tests
        run: |
          cat ci/debug_gradle_signing >> id/build.gradle &&
          cat ci/debug_gradle_signing >> clientapi/build.gradle && ./gradlew clientapi:assembleDebugAndroidTest

      - name: Download universal apk
        uses: actions/download-artifact@v1
        with:
          name: universal_debug_apk

      - name: Login to Google Cloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Set current project
        run: gcloud config set project simprints-android-ci

      - name: Run Instrumentation Tests in Firebase Test Lab
        run: |
          gcloud firebase test android run --type instrumentation --app universal_debug_apk/universal.apk --test clientapi/build/outputs/apk/androidTest/debug/clientapi-debug-androidTest.apk --device model=walleye,version=28,locale=en,orientation=portrait --timeout 20m --use-orchestrator