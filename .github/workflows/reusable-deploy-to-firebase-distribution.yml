# Deploy APKs to Firebase App Distribution
name: "[Reusable] Deploy to Firebase"

on:
    workflow_call:
        inputs:
            buildType:
                type: string
                required: true

jobs:
    deploy-to-firebase:
        runs-on: ubuntu-latest
        timeout-minutes: ${{ fromJSON(vars.JOB_TIMEOUT_MINUTES) }}

        concurrency:
            group: firebase-${{ inputs.buildType }}-workflow #only one instance of this workflow can run at a time
            cancel-in-progress: true

        environment: ${{ inputs.buildType }}   # Dynamically set the job environment based on the input

        env:
            BUILD_IS_DEBUGGABLE: ${{ vars.BUILD_IS_DEBUGGABLE }}
            DB_IS_ENCRYPTED: ${{ vars.DB_IS_ENCRYPTED }}
            FIREBASE_DIST_CREDENTIALS: ${{ secrets.FIREBASE_DIST_CREDENTIALS}}
            GOOGLE_SERVICES_FILE: ${{ secrets.GOOGLE_SERVICES_FILE}}

            SIGNING_JKS_FILE: ${{secrets.SIGNING_JKS_FILE}}
            SIGNING_KEYSTORE_PASSWORD: ${{secrets.SIGNING_KEYSTORE_PASSWORD}}
            SIGNING_KEY_ALIAS: ${{secrets.SIGNING_KEY_ALIAS}}
            SIGNING_KEY_PASSWORD: ${{secrets.SIGNING_KEY_PASSWORD}}

        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: 17
                    distribution: 'temurin'

            -   name: Set up local.properties
                run: |
                    source ci/pipeline/setup
                    echo "GITHUB_USERNAME=${{ secrets.GH_PACKAGE_NAME }}" >>  local.properties
                    echo "GITHUB_TOKEN=${{ secrets.GH_PACKAGE_TOKEN }}" >>  local.properties

            -   name: Write Google Services file
                run: echo $GOOGLE_SERVICES_FILE > id/src/google-services.json

            -   name: Update build properties
                run: |
                    source ci/deployment/build_properties_setup ${{ inputs.buildType }} $BUILD_IS_DEBUGGABLE $DB_IS_ENCRYPTED

            -   name: write firebase credentials
                run: echo "$FIREBASE_DIST_CREDENTIALS" >  id/src/serviceCredentialsFile.json

            -   name: Set up signing properties
                run: source ci/deployment/signing_properties_setup

            -   name: build and deploy debug apk
                if: ${{ inputs.buildType == 'dev' }}
                run: |
                    ./gradlew id:packageDebugUniversalApk
                    ./gradlew id:appDistributionUploadDebug --artifactPath=id/build/outputs/apk_from_bundle/debug/id-debug-universal.apk

            -   name: build and deploy staging apk
                if: ${{ inputs.buildType == 'staging' }}
                run: |
                    ./gradlew id:packageStagingUniversalApk
                    ./gradlew id:appDistributionUploadStaging  --artifactPath=id/build/outputs/apk_from_bundle/staging/id-staging-universal.apk

            -   name: deploy to firebase completed
                run: echo "### An Apk was deployed into firebase ${{ inputs.buildType }} channel :rocket:" >> $GITHUB_STEP_SUMMARY
