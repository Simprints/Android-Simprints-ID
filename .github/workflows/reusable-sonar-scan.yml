# this job downloads all testing reports then does a sonarqube scan
name: "[Reusable] SonarQube Scan"

on:
    workflow_call:

jobs:
    sonarQube:
        runs-on: ubuntu-latest
        timeout-minutes: ${{ fromJSON(vars.JOB_TIMEOUT_MINUTES) }}

        env:
            GOOGLE_SERVICES_FILE: ${{ secrets.GOOGLE_SERVICES_FILE}}

        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0 # do full git history checkout as this info needed for the sonar plugin

            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: 17
                    distribution: 'temurin'

            -   name: Restore gradle global directory
                uses: actions/cache/restore@v4
                id: cache
                with:
                    path: |
                        ~/.gradle/
                        .gradle/
                    key: global-gradle-
                    restore-keys: global-gradle-

            -   name: Set up build files
                uses: ./.github/actions/setup-gradle-build-files
                with:
                    gh-package-name: ${{ secrets.GH_PACKAGE_NAME }}
                    gh-package-token: ${{ secrets.GH_PACKAGE_TOKEN }}
                    google-services-file: ${{ secrets.GOOGLE_SERVICES_FILE }}

            -   name: download all artifacts
                uses: actions/download-artifact@v4
                with:
                    path: test-reports

            # Move all reports to the root directory
            # Use -f to force the move and || true to prevent failure if the file doesn't exist
            -   name: Move reports
                run: |
                    rsync -arv test-reports/core/* .  || true
                    rsync -arv test-reports/infra1/* .  || true
                    rsync -arv test-reports/infra2/* .  || true
                    rsync -arv test-reports/feature1/* .  || true
                    rsync -arv test-reports/feature2/* .  || true
                    rsync -arv test-reports/dashboard/* .  || true
                    rsync -arv test-reports/face/* .  || true
                    rsync -arv test-reports/fingerprint/* .  || true

            # list all reports for Id module
            -   name: list reports
                run: |
                    ls -l id

            -   name: run sonar
                env:
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: |
                    # Check if the event is a pull request
                    if [ "${{ github.event_name }}" == "pull_request" ]; then
                        # Run SonarQube scan without branch name param as sonarqube will detect PR branch
                        ./gradlew sonar -Dsonar.qualitygate.wait=true -Dsonar.qualitygate.timeout=3600 --info
                    else
                        # Run SonarQube scan with branch name param
                        ./gradlew sonar -Dsonar.qualitygate.wait=true -Dsonar.qualitygate.timeout=3600 -Dsonar.branch.name=${{ github.ref_name }} --info
                    fi
