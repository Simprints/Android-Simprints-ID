def buildPropertiesFile = rootProject.file("buildSrc${File.separator}build.properties")
def buildProperties = new Properties()
buildProperties.load(new FileInputStream(buildPropertiesFile))

android {
    defaultConfig {
        minSdkVersion buildProperties["MIN_SDK_VERSION"] as Integer

        versionCode buildProperties["VERSION_CODE"] as Integer
        versionName buildProperties["VERSION_NAME"] + "+" + versionCode
    }

    buildTypes {
        release {
            lintOptions {
                // TODO : Remove whenever possible
                // Check in the Translations Editor for crucial translations that may be missing
                abortOnError true
                fatal 'StopShip'
                checkReleaseBuilds true
            }
            minifyEnabled true
            ext.enableCrashlytics = true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            manifestPlaceholders = [firebase_performance_logcat_enabled: false, firebase_analytics_collection_enabled: true]
            buildConfigField("String", "SAFETYNET_API_KEY", "\"AIzaSyDdGdHCjfLY6z3zZSBrSHvjvNjh6K6Dhmw\"")
            buildConfigField("String", "LONG_CONSENT_BUCKET", "\"gs://simprints-152315-firebase-storage\"")
            buildConfigField("long", "SYNC_PERIODIC_WORKER_INTERVAL_MINUTES", "60L")
            buildConfigField("long", "SECURITY_STATE_PERIODIC_WORKER_INTERVAL_MINUTES", "30L")
        }
        staging {
            initWith release
            versionNameSuffix "-${buildProperties["VERSION_SUFFIX"]}"
            buildConfigField("String", "SAFETYNET_API_KEY", "\"AIzaSyCSmwYkm2iHlKi-cBjohMH-FS6jQuCqPTE\"")
            buildConfigField("String", "LONG_CONSENT_BUCKET", "\"gs://simprints-firebase-staging.appspot.com\"")
            buildConfigField("long", "SYNC_PERIODIC_WORKER_INTERVAL_MINUTES", "15L")
            buildConfigField("long", "SECURITY_STATE_PERIODIC_WORKER_INTERVAL_MINUTES", "15L")
        }
        debug {
            versionNameSuffix "-dev"
        }
    }
}
