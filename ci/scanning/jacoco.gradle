apply plugin: "jacoco"

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
//    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
//        "jacoco/testDebugUnitTest.exec",
//        "outputs/code-coverage/connected/*coverage.ec"
//    ]))
}

android {
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes += ['jdk.internal.*']
            }
        }
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }
}

//apply plugin: "com.vanniktech.android.junit.jacoco"
//
//junitJacoco {
//    jacocoVersion = '0.8.7' // type String
//    ignoreProjects = [] // type String array
//    excludes = [
//        'jdk.internal.*',
//        '**/R.class',
//        '**/R2.class', // ButterKnife Gradle Plugin.
//        '**/R$*.class',
//        '**/R2$*.class', // ButterKnife Gradle Plugin.
//        '**/*$$*',
//        '**/*$ViewInjector*.*', // Older ButterKnife Versions.
//        '**/*$ViewBinder*.*', // Older ButterKnife Versions.
//        '**/*_ViewBinding*.*', // Newer ButterKnife Versions.
//        '**/BuildConfig.*',
//        '**/Manifest*.*',
//        '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
//        '**/*Dagger*.*', // Dagger auto-generated code.
//        '**/*MembersInjector*.*', // Dagger auto-generated code.
//        '**/*_Provide*Factory*.*', // Dagger auto-generated code.
//        '**/*_Factory*.*', // Dagger auto-generated code.
//        '**/*$JsonObjectMapper.*', // LoganSquare auto-generated code.
//        '**/*$inlined$*.*', // Kotlin specific, Jacoco can not handle several "$" in class name.
//        '**/*$Icepick.*', // Icepick auto-generated code.
//        '**/*$StateSaver.*', // android-state auto-generated code.
//        '**/*AutoValue_*.*' // AutoValue auto-generated code.
//    ]
//    includeNoLocationClasses = true // type boolean
//    includeInstrumentationCoverageInMergedReport = false // type boolean
//}
