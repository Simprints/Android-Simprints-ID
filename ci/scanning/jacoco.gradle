apply plugin: "jacoco"

jacoco {
    toolVersion = "${libs.versions.jacoco.version.get()}"
}

task jacocoTestReport(type: JacocoReport) {
    // Run all debug unit test gradle tasks before generating jacoco reports
    dependsOn tasks.withType(Test).matching {
        it.name.toLowerCase().contains("debug")
    }
    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def javaTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug/classes", excludes: fileFilter)
    def kotlinTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    classDirectories.setFrom(files([javaTree, kotlinTree]))

    def mainSrc = "${project.projectDir}/src/main/java"
    sourceDirectories.setFrom(files([mainSrc]))

    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
        "jacoco/testDebugUnitTest.exec",
        "outputs/code-coverage/connected/*coverage.ec"
    ]))
}

android {
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes += [
                    'jdk.internal.*',
                    '**/R.class',
                    '**/R$*.class',
                    '**/*$$*',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
                    '**/*Dagger*.*', // Dagger auto-generated code.
                    '**/*MembersInjector*.*', // Dagger auto-generated code.
                    '**/*_Provide*Factory*.*', // Dagger auto-generated code.
                    '**/*_Factory*.*', // Dagger auto-generated code.
                    '**/*$JsonObjectMapper.*', // LoganSquare auto-generated code.
                    '**/*$inlined$*.*', // Kotlin specific, Jacoco can not handle several "$" in class name.
                    '**/*$Icepick.*', // Icepick auto-generated code.
                    '**/*$StateSaver.*', // android-state auto-generated code.
                    '**/*AutoValue_*.*' // AutoValue auto-generated code.
                ]
            }
        }
        unitTests.returnDefaultValues = true
    }
}
