apply plugin: 'com.android.dynamic-feature'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

apply from: "${rootDir}${File.separator}ci${File.separator}signing_config.gradle"

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion config.min_sdk
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        release {
            // If we enable a specific pro-guard, then we need to add rules for the Activities.
            // in Dynamic Features, aapt doesn't pull them out from the Manifest as it does with the base model
            //proguardFiles 'proguard-rules-dynamic-features.pro'
        }
        releaseWithLogfile {
            initWith release
        }
        debug {
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // https://issuetracker.google.com/issues/132906456
    // When Unit tests are launched in CL, the classes.jar for the base module is not included in the final testing classes.jar file.
    // So the tests that have references to the base module fail with java.lang.NoClassDefFoundError exceptions.
    // The following line includes the base module classes.jar into the final one.
    // To run unit tests from CL: ./gradlew fingerprint:test
    testRuntimeOnly(files("${projectDir}/../id/build/intermediates/app_classes/debug/classes.jar"))

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':id')
    implementation project(':moduleapi')
    implementation project(':libsimprints')

    // Service Location
    implementation deps.koin.core
    implementation deps.koin.android

    // Support
    implementation deps.androidx.appcompat
    implementation deps.androidx.ui.constraintlayout
    implementation deps.androidx.lifecycle.scope

    implementation deps.support.material
    implementation deps.kotlin.reflect
    implementation deps.kotlin.anko
    implementation deps.gson.core
    implementation deps.rxjava2.core
    implementation deps.rxjava2.android
    implementation deps.rxjava2.kotlin

    // Kotlin
    implementation deps.androidx.core
    implementation deps.androidx.multidex

    // RootBeer (root detection)
    implementation deps.rootbeer.core

    // Unit Tests
    testImplementation project(':testtools')
    testImplementation deps.testing.junit
    testImplementation deps.testing.androidx.ext_junit
    testImplementation deps.testing.androidx.core_testing
    testImplementation deps.testing.robolectric.core
    testImplementation deps.testing.robolectric.multidex
    testImplementation deps.testing.truth
    testImplementation deps.testing.coroutines_test
    testImplementation deps.testing.androidx.core_testing
    testImplementation deps.testing.androidx.monitor
    testImplementation deps.testing.androidx.core
    testImplementation deps.testing.androidx.ext_junit
    testImplementation deps.testing.mockk.core

    testImplementation deps.testing.espresso.intents
    testImplementation deps.koin.core_ext
    testImplementation deps.testing.koin

    androidTestImplementation deps.testing.androidx.core_testing
    androidTestImplementation deps.testing.androidx.monitor
    androidTestImplementation deps.testing.androidx.core
    androidTestImplementation deps.testing.androidx.ext_junit
    androidTestImplementation deps.testing.androidx.runner
    androidTestImplementation deps.testing.mockk.core
    androidTestImplementation deps.testing.mockk.android
    androidTestUtil deps.testing.androidx.orchestrator

    androidTestImplementation deps.testing.androidx.rules
    androidTestImplementation deps.testing.espresso.core
    androidTestImplementation deps.testing.espresso.intents

    androidTestImplementation deps.koin.core_ext
    androidTestImplementation deps.testing.koin
    androidTestImplementation deps.testing.truth

}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
