def versions = [
    dagger   : "2.15",
    kotlin   : "1.3.11",
    lifecycle: "2.0.0",
    room     : "2.1.0-alpha03",
    retrofit : '2.4.0',
    okhttp   : '3.10.0',
    junit    : '4.12'
]

def kotlin = [
    stdlib : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin",
    reflect: "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin",
    anko   : "org.jetbrains.anko:anko:0.10.8"
]

def dagger = [
    version: "2.15"
    core           : "com.google.dagger:dagger:$dagger.version",
    android        : "com.google.dagger:dagger-android:$versions.dagger",
    android_support: "com.google.dagger:dagger-android-support:$versions.dagger",
    compiler       : "com.google.dagger:dagger-compiler: $versions.dagger"
]

def androidx = [
    core     : "androidx.core:core-ktx:1.0.1",
    multidex : "androidx.multidex:multidex:2.0.1",
    appcompat: "androidx.appcompat:appcompat:1.0.2",
    legacy   : "androidx.legacy:legacy-support-v4: 1.0.0",
    room     : [
        core    : "androidx.room:room-runtime:$versions.room",
        compiler: "androidx.room:room-compiler:$versions.room"
    ],
    lifecycle: [
        livedata : "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle",
        compiler : "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",
        viewmodel: "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    ],
    ui       : [
        constraintlayout: "androidx.constraintlayout:constraintlayout:1.1.3",
        cardview        : "androidx.cardview:cardview:1.0.0",
        fragment        : "androidx.fragment:fragment:1.0.0",
        preference      : "androidx.fragment:preference:1.0.0"
    ]
]

def support = [
    material: "com.google.android.material:material:1.1.0-alpha02"
]

def arch_components = [
    work   : "android.arch.work:work-runtime:1.0.0-beta02",
    testing: [
        core: "android.arch.core:core-testing:1.1.1"
    ]
]

def playservices = [
    location : "com.google.android.gms:play-services-location:16.0.0",
    places   : "com.google.android.gms:play-services-places:16.0.0",
    safetynet: "com.google.android.gms:play-services-safetynet:16.0.0"
]

def firebase = [
    database : "com.google.firebase:firebase-database:16.0.5",
    firestore: "com.google.firebase:firebase-firestore:17.1.5",
    core     : "com.google.firebase:firebase-core:16.0.6",
    auth     : "com.google.firebase:firebase-auth:16.1.0",
    config   : "com.google.firebase:firebase-config:16.1.3",
    perf     : "com.google.firebase:firebase-perf:16.2.3",
    storage  : "com.google.firebase:firebase-storage:16.0.5"
]

def crashlytics = [
    core: "com.crashlytics.sdk.android:crashlytics:2.9.5@aar",
    ndk : "com.crashlytics.sdk.android:crashlytics-ndk:1.1.4@aar"
]

def retrofit = [
    core         : "com.squareup.retrofit2:retrofit:$versions.retrofit",
    adapter      : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
    convertergson: "com.squareup.retrofit2:converter-gson:$versions.retrofit",
    logging      : "com.squareup.okhttp3:logging-interceptor:$versions.okhttp",
    okhttp       : "com.squareup.okhttp3:okhttp:$versions.okhttp",
]

def gson = [
    core: "com.google.code.gson:gson:2.8.2"
]

def timber = [
    core: "com.jakewharton.timber:timber:4.6.0"
]

def rxjava2 = [
    core         : "io.reactivex.rxjava2:rxjava:2.1.16",
    android      : "io.reactivex.rxjava2:rxandroid:2.0.2",
    kotlin       : "io.reactivex.rxjava2:rxkotlin:2.2.0",
    rxpermissions: "com.github.tbruyelle:rxpermissions:0.10.2",
    location     : "pl.charmas.android:android-reactive-location2:2.1@aar"
]

def simprints = [
    libscanner: "com.simprints:libscanner:2018.4.0",
    libmatcher: "com.simprints:libmatcher:1.3.2",
    mockscanner: "com.simprints:mockscanner:2018.3.0"
]

def testing = [
    junit        : "junit:junit:$versions.junit",
    robolectric  : [
        core    : "org.robolectric:robolectric:4.0.2",
        multidex: "org.robolectric:multidex:3.4.2"
    ],
    truth        : "com.google.truth:truth:0.42",
    mockito      : [
        core   : "org.mockito:mockito-core:2.24.0",
        inline : "org.mockito:mockito-inline:2.24.0",
        kotlin : "com.nhaarman:mockito-kotlin:1.5.0",
        android: "org.mockito:mockito-android:1.5.0"
    ],
    mockwebserver: "com.squareup.okhttp3:mockwebserver:3.10.0",
    espresso     : [
        core   : "androidx.test.espresso:espresso-core:3.1.1",
        intents: "androidx.test.espresso:espresso-intents:3.1.1",
        barista: "com.schibsted.spain:barista:2.5.0"
    ],
    dagger       : "com.github.fabioCollini.daggermock:daggermock:0.8.4",
    room         : "androidx.room:room-testing:2.1.0-alpha03",
    work         : "android.arch.work:work-testing: 1.0.0-beta02",
    retrofit     : "com.squareup.retrofit2:retrofit-mock:$versions.retrofit",
    androidx     : [
        monitor  : "androidx.test:monitor:1.1.1",
        ext_junit: "androidx.test.ext:junit:1.1.0",
        core     : "androidx.test:core:1.0.0",
        core_testing: "android.arch.core:core-testing:1.1.1",
        runner   : "androidx.test:runner:1.1.1",
        rules    : "androidx.test:rules:1.1.1"
    ]
]

ext.deps = [
    kotlin         : kotlin,
    dagger         : dagger,
    androidx       : androidx,
    support        : support,
    arch_components: arch_components,
    playservices   : playservices,
    firebase       : firebase,
    crashlytics    : crashlytics,
    retrofit       : retrofit,
    gson           : gson,
    timber         : timber,
    rxjava2        : rxjava2,
    simprints      : simprints,
    testing        : testing
]
