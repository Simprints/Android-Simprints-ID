package com.simprints.face.matcher

import android.os.Parcelable
import androidx.annotation.Keep
import com.simprints.core.domain.common.FlowProvider
import com.simprints.infra.enrolment.records.domain.models.SubjectQuery
import kotlinx.parcelize.Parcelize

@Keep
@Parcelize
data class FaceMatchParams(
    val probeFaceSamples: List<Sample>,
    val flowType: FlowProvider.FlowType,
    val queryForCandidates: SubjectQuery,
) : Parcelable {

    @Keep
    @Parcelize
    data class Sample(
        val faceId: String,
        val template: ByteArray,
    ) : Parcelable {

        // Auto-generated by Android Studio to ensure
        // byte array field is compared correctly
        override fun equals(other: Any?): Boolean {
            if (this === other) return true
            if (javaClass != other?.javaClass) return false

            other as Sample

            if (faceId != other.faceId) return false
            if (!template.contentEquals(other.template)) return false

            return true
        }

        override fun hashCode(): Int {
            var result = faceId.hashCode()
            result = 31 * result + template.contentHashCode()
            return result
        }
    }
}

