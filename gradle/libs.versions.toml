[versions]
kotlin_version = "1.7.22"
androidx_navigation_version = "2.5.3"
kotlin_coroutine_version = "1.6.4"
app_compat_version = "1.5.1"
androidx_version = "1.5.0"
androidx_test_orchestrator_version = "1.4.2"
espresso_version = "3.5.0"
uiAutomator_version = "2.2.0"
androidx_lifecycle_version = "2.5.1"
androidx_room_version = "2.4.3"
androidx_camerax_version = "1.2.0"
dagger_version = "2.44.2"
work_version = "2.7.1"
location_services_version = "21.0.1"
safetynet_services_version = "18.0.1"
retrofit_version = "2.9.0"
okttp_version = "4.10.0"
fuzzywuzzy_version = "1.4.0"
jackson_version = "2.14.1"
rootbeer_version = "0.1.0"
mockito_version = "4.10.0"
robolectric_version = "4.8.2"
commons_io_version = "2.11.0"
kronos_version = "0.0.1-alpha11"
fragment_version = "1.5.5"
chuck_version = "3.5.2"
simmatcher_version = "1.0.0"
hilt_version = "2.44.2"
hilt_androidx_version = "1.0.0"
datastore_version = "1.0.0"
protobuf_version = "3.21.11"
jacoco_version = "0.8.8"

[libraries]
#Kotlin
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin_version" }
kotlin-coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin_coroutine_version" }
kotlin-coroutinesPlayServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlin_coroutine_version" }
kotlin-coroutine_rx2_adapter = "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:1.6.4"
#AndroidX
androidX-core = "androidx.core:core-ktx:1.9.0"
androidX-multidex = "androidx.multidex:multidex:2.0.1"
androidX-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "app_compat_version" }
androidX-Room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx_room_version" }
androidX-Room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx_room_version" }
#Lifecycle
androidX-lifecycle-scope = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx_lifecycle_version" }
androidX-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx_lifecycle_version" }

#UI
androidX-uI-constraintlayout = "androidx.constraintlayout:constraintlayout:2.1.4"
androidX-uI-coordinatorlayout = "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
androidX-uI-cardview = "androidx.cardview:cardview:1.0.0"
androidX-uI-fragment = { module = "androidx.fragment:fragment", version.ref = "fragment_version" }
androidX-uI-preference = "androidx.preference:preference:1.2.0"
androidX-uI-viewpager2 = "androidx.viewpager2:viewpager2:1.0.0"
#security
androidX-security = "androidx.security:security-crypto:1.0.0"

#CameraX
androidX-cameraX-core = { module = "androidx.camera:camera-core", version.ref = "androidx_camerax_version" }
androidX-cameraX-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "androidx_camerax_version" }
androidX-cameraX-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "androidx_camerax_version" }
androidX-cameraX-view = { module = "androidx.camera:camera-view", version.ref = "androidx_camerax_version" }

#Navigation
androidX-navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx_navigation_version" }

#Annotation
androidX-annotation-annotation = "androidx.annotation:annotation:1.5.0"

#sqlite
androidX-sqlite = "androidx.sqlite:sqlite:2.2.0"

#Dagger
dagger-core = { module = "com.google.dagger:dagger", version.ref = "dagger_version" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger_version" }
dagger-javax = "javax.inject:javax.inject:1"

#SqlCipher
sqlCipher-core = "net.zetetic:android-database-sqlcipher:4.5.2"

#Support
support-material = "com.google.android.material:material:1.7.0"

#WorkManager
workManager-work = { module = "androidx.work:work-runtime-ktx", version.ref = "work_version" }

#PlayServices
playServices-location = { module = "com.google.android.gms:play-services-location", version.ref = "location_services_version" }
playServices-safetynet = { module = "com.google.android.gms:play-services-safetynet", version.ref = "safetynet_services_version" }

#Firebase
firebase-auth = "com.google.firebase:firebase-auth-ktx:21.1.0"
firebase-storage = "com.google.firebase:firebase-storage-ktx:20.1.0"
firebase-barcode = "com.google.android.gms:play-services-mlkit-barcode-scanning:18.1.0"

#Retrofit
retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit_version" }
retrofit-adapter = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "retrofit_version" }
retrofit-jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit_version" }
retrofit-converterScalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit_version" }
retrofit-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okttp_version" }
retrofit-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okttp_version" }

#Chuck
chuck-debug = { module = "com.github.chuckerteam.chucker:library", version.ref = "chuck_version" }
chuck-release = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chuck_version" }

#Jackson
jackson-core = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson_version" }

#RxJava2
rxJava2-core = "io.reactivex.rxjava2:rxjava:2.2.21"
rxJava2-android = "io.reactivex.rxjava2:rxandroid:2.1.1"
rxJava2-kotlin = "io.reactivex.rxjava2:rxkotlin:2.4.0"

#Fuzzywuzzy
fuzzywuzzy-core = { module = "me.xdrop:fuzzywuzzy", version.ref = "fuzzywuzzy_version" }

#Rootbeer
rootbeer-core = { module = "com.scottyab:rootbeer-lib", version.ref = "rootbeer_version" }

#cameraView
cameraView = "com.otaliastudios:cameraview:2.7.2"

#circleImageView
circleImageView = "de.hdodenhof:circleimageview:3.1.0"

#Splitties-core
splitties-core = "com.louiscad.splitties:splitties-fun-pack-android-base-with-views-dsl:3.0.0"

#CommonsIO
commonsIO-commons_io = { module = "commons-io:commons-io", version.ref = "commons_io_version" }

#Kronos
kronos-kronos = { module = "com.lyft.kronos:kronos-android", version.ref = "kronos_version" }
#libsimprints
libsimprints = "com.simprints:libsimprints:2022.3.0"
#simmatcher
simmatcher = { module = "com.simprints:libsimmatcher", version.ref = "simmatcher_version" }

#hilt
hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt_version" }
hilt-kapt = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt_version" }
hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hilt_androidx_version" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt_androidx_version" }
hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt_version" }

testing-hilt = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt_version" }
testing-hilt-kapt = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt_version" }

#Datastore
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore_version" }

#Protobuf
protobuf = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobuf_version" }

#Testing
testing-junit = "junit:junit:4.13.2"
testing-truth = "com.google.truth:truth:1.1.3"
testing-dagger = "com.github.fabioCollini.daggermock:daggermock:0.8.5"
testing-dagger_kotlin = "com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.5"
testing-work = { module = "androidx.work:work-testing", version.ref = "work_version" }
testing-retrofit = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit_version" }
testing-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okttp_version" }
testing-coroutines_test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin_coroutine_version" }

testing-live_data = "com.jraska.livedata:testing-ktx:1.3.0"
testing-fragment_testing = { module = "androidx.fragment:fragment-testing", version.ref = "fragment_version" }
testing-navigation_testing = { module = "androidx.navigation:navigation-testing", version.ref = "androidx_navigation_version" }

#Testing-KoTest
testing-KoTest-kotlin_assert = "io.kotest:kotest-assertions-core:5.5.4"
#Testing-Robolectric
testing-Robolectric-core = { module = "org.robolectric:robolectric", version.ref = "robolectric_version" }
testing-Robolectric-multidex = "org.robolectric:multidex:3.4.2"
testing-Robolectric-annotation = { module = "org.robolectric:annotations", version.ref = "robolectric_version" }
#Testing-Mockito
testing-Mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito_version" }
testing-Mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito_version" } #Required to mock final classes
testing-Mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito_version" } #Required to use Mock in AndroidTests
testing-Mockito-kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
#Testing-Mockk
testing-Mockk-core = "io.mockk:mockk:1.13.3"
testing-Mockk-android = "io.mockk:mockk-android:1.13.3"
#Testing-Espresso
testing-Espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso_version" }
testing-Espresso-accessibility = "com.google.android.apps.common.testing.accessibility.framework:accessibility-test-framework:4.0.0"
testing-Espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espresso_version" }
testing-Espresso-barista = "com.adevinta.android:barista:4.3.0" #Used to grant permissions in AndroidTests
#Testing-AndroidX
testing-AndroidX-ext_junit = "androidx.test.ext:junit:1.1.4"
testing-AndroidX-core = { module = "androidx.test:core", version.ref = "androidx_version" }
testing-AndroidX-core_testing = { module = "android.arch.core:core-testing", version.ref = "androidx_version" }
testing-AndroidX-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidx_test_orchestrator_version" }
testing-AndroidX-runner = { module = "androidx.test:runner", version.ref = "androidx_version" }
testing-AndroidX-rules = { module = "androidx.test:rules", version.ref = "androidx_version" }
testing-AndroidX-room = { module = "androidx.room:room-testing", version.ref = "androidx_room_version" }
testing-AndroidX-navigation = { module = "androidx.navigation:navigation-testing", version.ref = "androidx_navigation_version" }
testing-AndroidX-uiAutomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiAutomator_version" }




