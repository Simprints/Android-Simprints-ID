apply plugin: "com.android.application"
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"
apply plugin: 'kotlin-parcelize'
apply plugin: 'realm-android'
apply plugin: 'com.github.triplet.play'

// Build Plugins
apply from: "${rootDir}${File.separator}buildSrc${File.separator}build_config.gradle"
apply from: "${rootDir}${File.separator}buildSrc${File.separator}signing_config.gradle"
// Deploy Plugins
apply from: "${rootDir}${File.separator}ci${File.separator}deployment${File.separator}deploy_config.gradle"

android {

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                //Required by Room to be able to export the db schemas
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    lintOptions {
        warning 'InvalidPackage'
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            ext.enableCrashlytics = true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            manifestPlaceholders = [firebase_performance_logcat_enabled: false, firebase_analytics_collection_enabled: true]
            buildConfigField("String", "SAFETYNET_API_KEY", "\"$RELEASE_SAFETYNET_KEY\"")
            buildConfigField("String", "LONG_CONSENT_BUCKET", "\"gs://simprints-152315-firebase-storage\"")
            buildConfigField("long", "SYNC_PERIODIC_WORKER_INTERVAL_MINUTES", "60L")
            buildConfigField("long", "SECURITY_STATE_PERIODIC_WORKER_INTERVAL_MINUTES", "30L")
        }
        staging {
            minifyEnabled true
            ext.enableCrashlytics = true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            manifestPlaceholders = [firebase_performance_logcat_enabled: false, firebase_analytics_collection_enabled: true]
            buildConfigField("String", "SAFETYNET_API_KEY", "\"$STAGING_SAFETYNET_KEY\"")
            buildConfigField("String", "LONG_CONSENT_BUCKET", "\"gs://simprints-firebase-staging.appspot.com\"")
            buildConfigField("long", "SYNC_PERIODIC_WORKER_INTERVAL_MINUTES", "15L")
            buildConfigField("long", "SECURITY_STATE_PERIODIC_WORKER_INTERVAL_MINUTES", "15L")
        }
        debug {
            minifyEnabled false
            ext.enableCrashlytics = false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            manifestPlaceholders = [firebase_performance_logcat_enabled: false, firebase_analytics_collection_enabled: true]
            FirebasePerformance {
                instrumentationEnabled false
            }
            buildConfigField("String", "SAFETYNET_API_KEY", "\"$DEV_SAFETYNET_KEY\"")
            buildConfigField("String", "LONG_CONSENT_BUCKET", "\"gs://simprints-dev-firebase-storage\"")
            buildConfigField("long", "SYNC_PERIODIC_WORKER_INTERVAL_MINUTES", "15L")
            buildConfigField("long", "SECURITY_STATE_PERIODIC_WORKER_INTERVAL_MINUTES", "15L")
        }

    }

    sourceSets {
        String sharedTestDir = 'src/commontesttools/java'
        String eventCreators = 'src/debug/java'
        test {
            java.srcDir sharedTestDir
            java.srcDir eventCreators
        }
        androidTest.java.srcDir sharedTestDir
        androidTest.java.srcDir 'src/androidTest/java'

        // Adds exported room schema location as test app assets.
        debug.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled = true
    }

    // Required for deps that use Java 8 (okhttp)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    buildFeatures {
        viewBinding true
    }

    dynamicFeatures = [":fingerprint", ":face", ":clientapi"]
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://maven.google.com" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
}

dependencies {
    // ######################################################
    //                      Deps
    // ######################################################

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(':core')
    api project(':moduleapi')

    implementation deps.libsimprints

    implementation deps.dagger.core
    implementation deps.kotlin.reflect
    implementation deps.androidx.room.core
    implementation deps.androidx.room.ktx
    implementation deps.androidx.ui.cardview
    implementation deps.androidx.ui.preference
    implementation deps.androidx.ui.fragment
    implementation deps.androidx.security
    implementation deps.androidx.camerax.camera2
    implementation deps.androidx.camerax.lifecycle
    implementation deps.androidx.camerax.view
    implementation deps.support.material
    implementation deps.arch_components.work
    implementation deps.playservices.location
    implementation deps.playservices.places
    implementation deps.playservices.safetynet
    implementation deps.retrofit.core
    implementation deps.retrofit.adapter
    implementation deps.retrofit.jackson
    implementation deps.retrofit.logging
    implementation deps.retrofit.okhttp
    implementation deps.retrofit.converterScalars
    implementation deps.rxjava2.core
    kapt deps.androidx.room.compiler
    kapt deps.dagger.compiler
    implementation deps.fuzzywuzzy.core
    implementation deps.kronos.kronos
    implementation deps.jackson.core

    // RootBeer (root detection)
    implementation deps.rootbeer.core

    // Shared
    api deps.firebase.analytics
    api deps.kotlin.anko

    // Firebase
    implementation deps.firebase.auth
    implementation deps.firebase.config
    implementation deps.firebase.perf
    implementation deps.firebase.storage
    implementation deps.firebase.mlkit
    implementation deps.firebase.mlkit_barcode
    implementation deps.firebase.crashlytics

    implementation deps.timber.core
    implementation deps.androidx.core
    implementation deps.androidx.multidex
    implementation deps.androidx.appcompat
    implementation deps.androidx.lifecycle.ktx
    implementation deps.androidx.lifecycle.livedata
    implementation deps.androidx.lifecycle.viewmodel
    implementation deps.androidx.lifecycle.scope
    implementation deps.androidx.ui.constraintlayout
    api deps.androidx.navigation.dynamicfeatures
    implementation deps.kotlin.coroutines_android
    implementation deps.kotlin.coroutines_play_services
    implementation deps.androidx.camerax.core
    implementation deps.koin.core
    implementation deps.koin.android
    api deps.koin.viewmodel
    implementation deps.playcore.core
    implementation deps.playcore.core_ktx
    implementation deps.androidx.sqlite
    implementation deps.sqlcipher.core

    // ######################################################
    //                      Unit test
    // ######################################################

    testImplementation project(':fingerprintscannermock')
    testImplementation deps.testing.retrofit
    testImplementation(deps.testing.junit) {
        exclude group: "com.android.support"
    }
    testImplementation deps.testing.robolectric.core
    testImplementation deps.testing.robolectric.multidex
    testImplementation deps.testing.androidx.ext_junit
    testImplementation deps.testing.androidx.core
    testImplementation deps.testing.androidx.core_testing
    testImplementation deps.testing.androidx.runner
    testImplementation deps.testing.androidx.room
    testImplementation deps.testing.androidx.rules
    testImplementation deps.testing.espresso.core
    testImplementation deps.testing.espresso.intents
    testImplementation deps.testing.espresso.contrib
    testImplementation deps.testing.truth
    testImplementation deps.testing.kotlin

    testImplementation deps.testing.mockk.core
    testImplementation(deps.testing.koin)

    testImplementation deps.testing.mockwebserver
    testImplementation deps.testing.work
    testImplementation deps.testing.coroutines_test
    kaptTest deps.dagger.compiler
    testImplementation(project(':testtools')) {
        exclude group: 'org.mockito:mockito-android'
    }

    // ######################################################
    //                      Android test
    // ######################################################

    androidTestImplementation(project(':fingerprintscannermock')) {
        exclude group: 'org.apache.maven'
        exclude group: 'org.mockito'
        exclude group: 'org.robolectric'
    }
    androidTestImplementation deps.rxjava2.kotlin
    androidTestImplementation deps.testing.mockito.core
    androidTestImplementation deps.testing.mockito.android
    androidTestImplementation deps.testing.mockito.kotlin
    androidTestImplementation deps.testing.retrofit
    androidTestImplementation deps.testing.androidx.core_testing
    androidTestImplementation deps.testing.androidx.monitor
    androidTestImplementation deps.testing.androidx.core
    androidTestUtil deps.testing.androidx.orchestrator
    androidTestImplementation deps.testing.androidx.ext_junit
    androidTestImplementation deps.testing.androidx.runner
    androidTestImplementation deps.testing.androidx.rules
    androidTestImplementation deps.testing.work
    androidTestImplementation deps.testing.espresso.core
    androidTestImplementation deps.testing.espresso.intents
    androidTestImplementation deps.testing.truth
    androidTestImplementation deps.testing.rx2_idler
    androidTestImplementation deps.testing.mockk.core
    androidTestImplementation deps.testing.mockk.android
    androidTestImplementation deps.testing.mockwebserver
    androidTestImplementation deps.testing.coroutines_test
    androidTestImplementation deps.testing.androidx.room

    androidTestImplementation(deps.testing.awaitility) {
        exclude group: "org.hamcrest"
    }

    androidTestImplementation(deps.testing.espresso.barista) {
        exclude group: "com.android.support"
        exclude group: "com.google.code.findbugs"
        exclude group: "org.jetbrains.kotlin"
        exclude group: "com.google.guava"
    }
    kaptAndroidTest deps.dagger.compiler
    androidTestImplementation(project(':testtools')) {
        exclude group: 'org.apache.maven'
        exclude group: 'org.mockito'
        exclude group: 'org.robolectric'
        exclude group: 'org.jetbrains.kotlinx'
    }
    androidTestImplementation deps.testing.kappuccino

}

kapt {
    useBuildCache = true
    arguments {
        arg("realm.ignoreKotlinNullability", true)
    }
}

apply plugin: "com.google.gms.google-services"

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlinx.coroutines.InternalCoroutinesApi"]
}
