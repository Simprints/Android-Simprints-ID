package com.simprints.infra.matching

import androidx.annotation.Keep
import com.simprints.core.domain.common.FlowType
import com.simprints.core.domain.fingerprint.IFingerIdentifier
import com.simprints.core.domain.step.StepParams
import com.simprints.infra.config.store.models.FaceConfiguration
import com.simprints.infra.config.store.models.FingerprintConfiguration
import com.simprints.infra.enrolment.records.repository.domain.models.BiometricDataSource
import com.simprints.infra.enrolment.records.repository.domain.models.SubjectQuery
import com.simprints.infra.uibase.annotations.ExcludedFromGeneratedTestCoverageReports

@Keep
data class MatchParams(
    val probeReferenceId: String,
    val probeFaceSamples: List<FaceSample> = emptyList(),
    val faceSDK: FaceConfiguration.BioSdk? = null,
    val probeFingerprintSamples: List<FingerprintSample> = emptyList(),
    val fingerprintSDK: FingerprintConfiguration.BioSdk? = null,
    val flowType: FlowType,
    val queryForCandidates: SubjectQuery,
    val biometricDataSource: BiometricDataSource,
) : StepParams {
    fun isFaceMatch() = probeFaceSamples.isNotEmpty()

    @Keep
    @ExcludedFromGeneratedTestCoverageReports("Generated code")
    data class FaceSample(
        val faceId: String,
        val template: ByteArray,
    ) : StepParams {
        // Auto-generated by Android Studio to ensure
        // byte array field is compared correctly
        override fun equals(other: Any?): Boolean {
            if (this === other) return true
            if (javaClass != other?.javaClass) return false

            other as FaceSample

            if (faceId != other.faceId) return false
            if (!template.contentEquals(other.template)) return false

            return true
        }

        override fun hashCode(): Int {
            var result = faceId.hashCode()
            result = 31 * result + template.contentHashCode()
            return result
        }
    }

    @Keep
    @ExcludedFromGeneratedTestCoverageReports("Generated code")
    data class FingerprintSample(
        val fingerId: IFingerIdentifier,
        val format: String,
        val template: ByteArray,
    ) : StepParams {
        // Auto-generated by Android Studio to ensure
        // byte array field is compared correctly
        override fun equals(other: Any?): Boolean {
            if (this === other) return true
            if (javaClass != other?.javaClass) return false

            other as FingerprintSample

            if (fingerId != other.fingerId) return false
            if (format != other.format) return false
            if (!template.contentEquals(other.template)) return false

            return true
        }

        override fun hashCode(): Int {
            var result = fingerId.hashCode()
            result = 31 * result + format.hashCode()
            result = 31 * result + template.contentHashCode()
            return result
        }
    }
}
